@page "/"
@using Frontend.Models
@using Frontend.Services
@inject NavigationManager navigation

<PageTitle>Search</PageTitle>

<MudGrid>
    <MudItem xs="12">
        <MudTextField 
            @bind-Value="SearchImages"
            Label="Ricerca una immagine"
            HelperText="Ricerca una immagine per nome o descrizione"
            Variant="Variant.Outlined"
            DebounceInterval=1000
            OnDebounceIntervalElapsed="OnSearch"/>
    </MudItem>
</MudGrid>

@if(Photos?.Length > 0)
{
    <MudGrid Spacing="2" Justify="Justify.Center" Class="md">
        @foreach(var p in Photos)
        {
            <MudItem xs=12 md=6 lg=4>
                <ImageViewerComponent Photo=p 
                NavigateToPhotoCommentEvent="@NavigateToComments" ></ImageViewerComponent>
            </MudItem>   
        }
    </MudGrid>   
}


@code{
    public Photo[]? Photos { get; set; }

    [Inject]
    public IMinimalService? MinimalService { get; set; }
    protected string? SearchImages = null;

    private async Task OnSearch(string search)
    {
        await SearchImagesAsync();
        StateHasChanged();
    }

    private async Task SearchImagesAsync()
    {
        Photos = await MinimalService?.SearchImagesAsync(SearchImages!)!;
        StateHasChanged();
        foreach(var p in Photos)
        {
            p.Image = await DownloadImageAsync(p.Id)!;
            StateHasChanged();
        }
    }

    private void NavigateToComments(Guid photoId)
    {
        navigation.NavigateTo($"image/{photoId}/comments");
    }

    private async ValueTask<byte[]> DownloadImageAsync(Guid imageId)
    {
        return await MinimalService?.DownloadImageAsync(imageId)!;
    }
}